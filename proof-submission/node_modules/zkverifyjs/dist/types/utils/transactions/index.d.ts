import { ApiPromise, SubmittableResult } from '@polkadot/api';
import { KeyringPair } from '@polkadot/keyring/types';
import { SignerOptions, SubmittableExtrinsic, Signer } from '@polkadot/api/types';
import { EventEmitter } from 'events';
import { VerifyOptions } from '../../session/types';
import { TransactionType } from '../../enums';
import { TransactionInfoByType } from './types';
/**
 * Handles transaction execution, signing, and event handling.
 */
export declare const handleTransaction: <T extends TransactionType>(api: ApiPromise, submitExtrinsic: SubmittableExtrinsic<"promise">, account: KeyringPair | string, signer: Signer | undefined, emitter: EventEmitter, options: VerifyOptions, transactionType: T, batchCount?: number) => Promise<TransactionInfoByType[T]>;
/**
 * Handles signing and sending transactions.
 */
export declare function performSignAndSend(submitExtrinsic: SubmittableExtrinsic<'promise'>, account: KeyringPair | string, options: Partial<SignerOptions> | undefined, callback: (result: SubmittableResult) => Promise<void>): Promise<() => void>;
//# sourceMappingURL=index.d.ts.map