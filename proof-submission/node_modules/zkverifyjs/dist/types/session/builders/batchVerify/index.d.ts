import { VerifyOptions } from '../../types';
import { EventEmitter } from 'events';
import { BatchVerifyTransactionInfo } from '../../../types';
import { VerifyInput } from '../../../api/verify/types';
import { ProofOptions } from '../../../config';
export declare class BatchVerificationBuilder {
    private readonly batchExecuteVerify;
    private readonly options;
    private nonceSet;
    private registeredVkSet;
    constructor(batchExecuteVerify: (options: VerifyOptions, input: VerifyInput[]) => Promise<{
        events: EventEmitter;
        transactionResult: Promise<BatchVerifyTransactionInfo>;
    }>, proofOptions: ProofOptions, accountAddress?: string);
    nonce(nonce: number): this;
    withRegisteredVk(): this;
    execute(input: VerifyInput[]): Promise<{
        events: EventEmitter;
        transactionResult: Promise<BatchVerifyTransactionInfo>;
    }>;
}
//# sourceMappingURL=index.d.ts.map