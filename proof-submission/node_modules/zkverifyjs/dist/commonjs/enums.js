"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PUBLIC_ZK_VERIFY_EVENTS = exports.Destination = exports.AggregateSecurityRules = exports.CurveType = exports.Library = exports.Plonky2HashFunction = exports.Risc0Version = exports.ZkVerifyEvents = exports.TransactionStatus = exports.TransactionType = void 0;
var TransactionType;
(function (TransactionType) {
    TransactionType[TransactionType["Verify"] = 1] = "Verify";
    TransactionType[TransactionType["VKRegistration"] = 2] = "VKRegistration";
    TransactionType[TransactionType["DomainRegistration"] = 3] = "DomainRegistration";
    TransactionType[TransactionType["DomainHold"] = 4] = "DomainHold";
    TransactionType[TransactionType["DomainUnregister"] = 5] = "DomainUnregister";
    TransactionType[TransactionType["Aggregate"] = 6] = "Aggregate";
    TransactionType[TransactionType["BatchVerify"] = 7] = "BatchVerify";
})(TransactionType || (exports.TransactionType = TransactionType = {}));
var TransactionStatus;
(function (TransactionStatus) {
    TransactionStatus["Broadcast"] = "broadcast";
    TransactionStatus["Dropped"] = "dropped";
    TransactionStatus["Error"] = "error";
    TransactionStatus["Finalized"] = "finalized";
    TransactionStatus["InBlock"] = "inBlock";
    TransactionStatus["Invalid"] = "invalid";
    TransactionStatus["Pending"] = "pending";
    TransactionStatus["Retracted"] = "retracted";
    TransactionStatus["Usurped"] = "usurped";
})(TransactionStatus || (exports.TransactionStatus = TransactionStatus = {}));
var ZkVerifyEvents;
(function (ZkVerifyEvents) {
    ZkVerifyEvents["AggregationComplete"] = "aggregationComplete";
    ZkVerifyEvents["NewAggregationReceipt"] = "newAggregationReceipt";
    ZkVerifyEvents["Broadcast"] = "broadcast";
    ZkVerifyEvents["CannotAggregate"] = "cannotAggregate";
    ZkVerifyEvents["DomainStateChanged"] = "domainStateChanged";
    ZkVerifyEvents["ErrorEvent"] = "error";
    ZkVerifyEvents["Finalized"] = "finalized";
    ZkVerifyEvents["IncludedInBlock"] = "includedInBlock";
    ZkVerifyEvents["NewDomain"] = "newDomain";
    ZkVerifyEvents["NewProof"] = "newProof";
    ZkVerifyEvents["ProofVerified"] = "proofVerified";
    ZkVerifyEvents["Unsubscribe"] = "unsubscribe";
    ZkVerifyEvents["VkRegistered"] = "vkRegistered";
})(ZkVerifyEvents || (exports.ZkVerifyEvents = ZkVerifyEvents = {}));
var Risc0Version;
(function (Risc0Version) {
    Risc0Version["V1_0"] = "V1_0";
    Risc0Version["V1_1"] = "V1_1";
    Risc0Version["V1_2"] = "V1_2";
    Risc0Version["V2_0"] = "V2_0";
})(Risc0Version || (exports.Risc0Version = Risc0Version = {}));
var Plonky2HashFunction;
(function (Plonky2HashFunction) {
    Plonky2HashFunction["Keccak"] = "Keccak";
    Plonky2HashFunction["Poseidon"] = "Poseidon";
})(Plonky2HashFunction || (exports.Plonky2HashFunction = Plonky2HashFunction = {}));
var Library;
(function (Library) {
    Library["snarkjs"] = "snarkjs";
    Library["gnark"] = "gnark";
})(Library || (exports.Library = Library = {}));
var CurveType;
(function (CurveType) {
    CurveType["bn128"] = "bn128";
    CurveType["bn254"] = "bn254";
    CurveType["bls12381"] = "bls12381";
})(CurveType || (exports.CurveType = CurveType = {}));
var AggregateSecurityRules;
(function (AggregateSecurityRules) {
    AggregateSecurityRules["Untrusted"] = "Untrusted";
    AggregateSecurityRules["OnlyOwner"] = "OnlyOwner";
    AggregateSecurityRules["OnlyOwnerUncompleted"] = "OnlyOwnerUncompleted";
})(AggregateSecurityRules || (exports.AggregateSecurityRules = AggregateSecurityRules = {}));
var Destination;
(function (Destination) {
    Destination["None"] = "None";
    Destination["Hyperbridge"] = "Hyperbridge";
})(Destination || (exports.Destination = Destination = {}));
exports.PUBLIC_ZK_VERIFY_EVENTS = [
    ZkVerifyEvents.NewAggregationReceipt,
    ZkVerifyEvents.ProofVerified,
    ZkVerifyEvents.NewProof,
    ZkVerifyEvents.VkRegistered,
    ZkVerifyEvents.NewDomain,
    ZkVerifyEvents.DomainStateChanged,
    ZkVerifyEvents.AggregationComplete,
];
