"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatProof = formatProof;
exports.formatVk = formatVk;
exports.formatPubs = formatPubs;
const helpers_1 = require("../../../utils/helpers");
function formatProof(proof, options) {
    validatedHexString(proof);
    if ((0, helpers_1.isPlonky2Config)(options)) {
        return {
            bytes: proof,
        };
    }
    throwInvalidPlonky2Config();
}
function formatVk(vk, options) {
    validatedHexString(vk);
    if ((0, helpers_1.isPlonky2Config)(options)) {
        return {
            config: options.config.hashFunction,
            bytes: vk,
        };
    }
    throwInvalidPlonky2Config();
}
function formatPubs(pubs, options) {
    validatedHexString(pubs);
    if ((0, helpers_1.isPlonky2Config)(options)) {
        return pubs;
    }
    throwInvalidPlonky2Config();
}
function validatedHexString(input) {
    if (!input.startsWith('0x')) {
        throw new Error('Invalid format: string input must be 0x-prefixed.');
    }
}
function throwInvalidPlonky2Config() {
    throw new Error('Invalid config: Not a Plonky2 proof config');
}
